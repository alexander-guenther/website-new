---
import { getCollection } from 'astro:content';

import BaseLayout from '../layouts/BaseLayout.astro';

import ContactCTA from '../components/ContactCTA.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import Hero from '../components/Hero.astro';
import Grid from '../components/Grid.astro';
import Icon from '../components/Icon.astro';
// Content Fetching: List five most recent dates
const alleFotos = (await getCollection('fotos'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
console.log(alleFotos)
---

<BaseLayout
	title="Ausgewählte Fotos | Alexander Günther"
	description="Eine Übersicht an Fotos und Bilder von Alexander Günther | Fotos."
>
	<div class="stack wrapper gap-20">
		<header class="hero" style="margin-bottom: -3em;">
			<Hero
				title="Fotos und Bilder"
				align="start"
			/>

		</header>
		

		<main class="stack wrapper gap-8">
			
			<Grid variant="small">
				{
					alleFotos.map((foto) => (
						<li>
							
								<div class="card">
									<span class="title"><Icon icon="info" size="1em" /></span>
									<img src={foto.data.img} alt={foto.data.img_alt || ''} loading="lazy" decoding="async" />
									
									<!-- Versteckte Box für Fotograf und Rolle -->
									<div class="info-box">
										<p>Stück: {foto.data.vorstellung || 'Unbekannt'}</p>
										<p>Rolle: {foto.data.rolle || 'Unbekannt'}</p>
										<p>Foto von: {foto.data.fotograf || 'Unbekannt'}</p>

										<br>
										<p><a href={foto.data.img}><Icon icon="fullscreen" size="1.3em" />Bild vergrößern</a></p>
									</div>
								</div>	
							
						</li>
					))
				}
			</Grid>
		</main>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: scale-down;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
		border: 5px solid white;
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 4.5rem;
			object-fit: scale-down;
		}
	}
	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.mention-card {
		display: flex;
		flex-direction: column;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
	.card {
		position: relative;
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		aspect-ratio: 4 / 5;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	.title {
		grid-area: 1 / 1 / 2 / 2;
		z-index: 1;
		margin: 0.5rem;
		padding: 0.25rem 0.5rem;
		background: var(--gray-999);
		color: var(--gray-200);
		border-radius: 500px;
	}

	img {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	/* Versteckte Box */
	.info-box {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: rgba(255, 255, 255, 0.9); /* Weiße Box mit leichter Transparenz */
		color: black;
		padding: 1rem;
		border-radius: 0 0 0.75rem 0.75rem;
		display: none; /* Standardmäßig versteckt */
		font-size: 0.9rem;
	}

	/* Box bei Hover anzeigen */
	.card:hover .info-box {
		display: block;
	}

	@media (min-width: 50em) {
		.card {
			height: 22rem;
			border-radius: 1.5rem;
		}

		.title {
			border-radius: 0.9375rem;
		}
	}
</style>